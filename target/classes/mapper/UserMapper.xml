<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="seed.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="seed.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="job_number" jdbcType="BIGINT" property="jobNumber" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="nice" jdbcType="VARCHAR" property="nice" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="set_data" jdbcType="INTEGER" property="setData" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="wechar" jdbcType="VARCHAR" property="wechar" />
    <result column="login_number" jdbcType="INTEGER" property="loginNumber" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="creator_time" jdbcType="TIMESTAMP" property="creatorTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="modifier_time" jdbcType="TIMESTAMP" property="modifierTime" />
    <association property="department" javaType="seed.entity.Department"
                 resultMap="seed.mapper.DepartmentMapper.BaseResultMap" columnPrefix="department_">
    </association>
  </resultMap>

  <!-- 配置数据库表名称 -->
  <sql id="table">`tb_user`</sql>

  <!-- 配置数据库表名称 -->
  <sql id="table_department">`tb_department`</sql>
  <!-- 配置数据库表名称 -->
  <sql id="table_role">`tb_role`</sql>

  <!-- 配置数据库表主键字段名称  -->
  <sql id="pk_col">`tb_user`.`id`</sql>

  <!-- 配置实体主键字段 -->
  <sql id="pk_prop">#{id}</sql>

  <!-- 配置数据库表字段列表信息 -->
  <sql id="cols">
    <include refid="table"/>.`id`,
    <include refid="table"/>.`department_id`,
    <include refid="table"/>.`department_code`,
    <include refid="table"/>.`role_id`,
    <include refid="table"/>.`job_number`,
    <include refid="table"/>.`account`,
    <include refid="table"/>.`name`,
    <include refid="table"/>.`parent_id`,
    <include refid="table"/>.`nice`,
    <include refid="table"/>.`password`,
    <include refid="table"/>.`position`,
    <include refid="table"/>.`sex`,
    <include refid="table"/>.`mail`,
    <include refid="table"/>.`phone`,
    <include refid="table"/>.`tel`,
    <include refid="table"/>.`login_number`,
    <include refid="table"/>.`last_login_time`,
    <include refid="table"/>.`set_data`,
    <include refid="table"/>.`status`,
    <include refid="table"/>.`creator_id`,
    <include refid="table"/>.`creator_name`,
    <include refid="table"/>.`creator_time`,
    <include refid="table"/>.`modifier_id`,
    <include refid="table"/>.`modifier_name`,
    <include refid="table"/>.`modifier_time`
    </sql>

  <!-- 配置实体类属性信息 -->
  <sql id="props">
    #{id},
    #{departmentId},
    #{departmentCode},
    #{roleId},
    #{jobNumber},
    #{account},
    #{name},
    #{parentId},
    #{nice},
    #{password},
    #{position},
    #{sex},
    #{mail},
    #{phone},
    #{tel},
    #{loginNumber},
    #{lastLoginTime},
    #{setData},
    #{status},
    #{creatorId},
    #{creatorName},
    #{creatorTime},
    #{modifierId},
    #{modifierName},
    #{modifierTime}
  </sql>

  <!-- 配置数据库表字段列表信息 -->
  <sql id="department_cols">
    <include refid="table_department"/>.`id` as department_id,
    <include refid="table_department"/>.`name` as department_name
  </sql>

  <!-- 配置数据库表字段列表信息 -->
  <sql id="role_cols">
    <include refid="table_role"/>.`id` as role_id,
    <include refid="table_role"/>.`name` as role_name,
    <include refid="table_role"/>.`permission` as role_permission
  </sql>

  <!-- 更新操作字段对应列表 -->
  <sql id="update_set">
    <include refid="table"/>.`department_id` = #{departmentId},
    <include refid="table"/>.`department_code` = #{departmentCode},
    <include refid="table"/>.`role_id` = #{roleId},
    <include refid="table"/>.`account` = #{account},
    <include refid="table"/>.`name` = #{name},
    <include refid="table"/>.`nice` = #{nice},
    <include refid="table"/>.`sex` = #{sex},
    <include refid="table"/>.`phone` = #{phone},
    <include refid="table"/>.`position` = #{position},
    <include refid="table"/>.`tel` = #{tel},
    <include refid="table"/>.`set_data` = #{setData}
  </sql>

  <!-- 更新操作字段对应列表 -->
  <sql id="update_password">
    <include refid="table"/>.`password` = #{password}
  </sql>

  <!-- 更新操作字段对应列表 -->
  <sql id="update_status">
    <include refid="table"/>.`status` = #{status}
  </sql>

  <!-- 更新操作字段对应列表 -->
  <sql id="update_login">
    <include refid="table"/>.`login_number` = <include refid="table"/>.`login_number`+1,
    <include refid="table"/>.`last_login_time` = #{lastLoginTime}
  </sql>

  <!-- 更新操作字段对应列表 -->
  <sql id="update_roleId">
    <include refid="table"/>.`role_id` = #{roleId}
  </sql>

  <select id="getByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select  <include refid="cols" />
    from <include refid="table"/>
    where
    account = #{account}
  </select>

  <select id="getByAccountAndPassword"  resultMap="BaseResultMap">
    select  <include refid="cols" />
    from <include refid="table"/>
    where
    account = #{account}
    and password = #{password}
  </select>

  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select  <include refid="cols" />,
    <include refid="department_cols"/>
    from <include refid="table"/>
    LEFT JOIN
    <include refid="table_department"/>
    on <include refid="table"/>.department_id = <include refid="table_department"/>.id
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </select>

  <insert id="save" parameterType="seed.entity.User" keyProperty="id">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select gen_ticket64() as ticket
    </selectKey>
    INSERT INTO
    <include refid="table"/>
    (<include refid="cols"/>)
    VALUES (<include refid="props"/>)
  </insert>


  <select id="find" resultMap="BaseResultMap">
    select
    <include refid="cols"/>,
    <include refid="department_cols"/>
    from
    <include refid="table"/>
    LEFT JOIN
    <include refid="table_department"/>
    on <include refid="table"/>.department_id = <include refid="table_department"/>.id
    where 1=1

    <if test="0>=size and status==1">
     and <include refid="table"/>.status =1
    </if>

    <if test="departmentId>0">
      and <include refid="table"/>.department_id=#{departmentId}
    </if>

    <if test="keyword != null and keyword !=''">
     and <include refid="table"/>.name like '${keyword}%'
    </if>

    order by <include refid="table"/>.`status` desc, <include refid="table"/>.`creator_time` desc
    <if test="size > 0">
      limit ${page},${size}
    </if>
  </select>

  <select id="getCount" resultType="java.lang.Integer">
    select
    count(1)
    from
    <include refid="table"/>
    where 1=1

    <if test="departmentId>0">
      and department_id=#{departmentId}
    </if>

    <if test="status==1">
      and <include refid="table"/>.status =1
    </if>

    <if test="keyword != null and keyword !=''">
     and name like '${keyword}%'
    </if>
  </select>

  <delete id="delete">
    delete from
    <include refid="table"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </delete>

  <update id="update" parameterType="seed.entity.User">
    update
    <include refid="table"/>
    set
    <include refid="update_set"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </update>

  <update id="updateLogin">
    update
    <include refid="table"/>
    set
    <include refid="update_login"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </update>

  <update id="updateRoleId">
    update
    <include refid="table"/>
    set
    <include refid="update_roleId"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </update>

  <update id="updatePassword">
    update
    <include refid="table"/>
    set
    <include refid="update_password"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </update>

  <update id="updateStatus">
    update
    <include refid="table"/>
    set
    <include refid="update_status"/>
    where
    <include refid="pk_col"/>
    =
    <include refid="pk_prop"/>
  </update>
</mapper>